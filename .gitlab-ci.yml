stages:
  - codecheck
  - release


# WORKFLOW RULES
# ------------------------------------------------------------------------------------------------------
workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS && $CI_PIPELINE_SOURCE == "push"'
      when: never
    - if: '$CI_COMMIT_BRANCH'
# ------------------------------------------------------------------------------------------------------


# TEMPLATES
# ------------------------------------------------------------------------------------------------------
.base_template:
  image: python:3.7-slim-buster
  tags:
    - build
    - internet
# --------------------------------------------------------------------------------------------------


# JOBS
# ------------------------------------------------------------------------------------------------------

# CODE CHECK BY PRE-COMMIT HOOKS
pre-commit_hooks_MR:
  stage: codecheck
  extends: .base_template
  before_script:
    - apt-get update && apt-get install -y -q git
    - python -m pip install pre-commit
  script:
    - git diff-tree --no-commit-id --name-only -r $CI_COMMIT_SHA | xargs pre-commit run --files
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'


# Publish a PyPI package
pypi:
  stage: release
  extends: .base_template
  before_script:
    - python -m pip install --upgrade pip
    - python -m pip install setuptools twine
  variables:
    TWINE_NON_INTERACTIVE: "true"
    TWINE_USERNAME: __token__
    TWINE_PASSWORD: ${PYPI_ESP_COREDUMP_TOKEN}
  script:
    - echo "Packaging espcoredump"
    - python setup.py sdist
    - python -m pip download esp-coredump==$(python setup.py -V) && exit 0
    - echo "Publishing new espcoredump version"
    - python -m twine upload dist/*
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
# ------------------------------------------------------------------------------------------------------
